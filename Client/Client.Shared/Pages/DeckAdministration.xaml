<Page x:Class="Client.Pages.DeckAdministration"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Common="using:Client.Common.Converters"
      xmlns:Controls="using:Client.Controls"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:Viewmodel="using:Client.Viewmodel"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:local="using:Client.Pages"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      x:Name="root"
      mc:Ignorable="d">
    <Page.Resources>
        <Common:NullToFalseConverter x:Key="NullToFalseConverter" />
        <Viewmodel:UserDataViewmodelAcces x:Key="UserData" x:Name="udViewmodel" />

        <!--<Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
            <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}" />
            <Setter Property="Background" Value="{ThemeResource TextBoxBackgroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}" />
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextSelectionHighlightColorThemeBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPointerOverBackgroundThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPointerOverBorderThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPointerOverForegroundThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPressedBackgroundThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPressedBorderThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxButtonPressedForegroundThemeBrush}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="BackgroundElement"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0" />
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="BorderElement"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="BorderElement"
                                                            BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <Border x:Name="BackgroundElement"
                                                            Margin="{TemplateBinding BorderThickness}"
                                                            Background="{ThemeResource TextBoxButtonBackgroundThemeBrush}">
                                                        <TextBlock x:Name="GlyphElement"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"
                                                                   AutomationProperties.AccessibilityView="Raw"
                                                                   FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                                   FontStyle="Normal"
                                                                   Foreground="{ThemeResource TextBoxButtonForegroundThemeBrush}"
                                                                   Text="&#xE0A4;" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="BackgroundElement"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{ThemeResource TextControlBackgroundThemeOpacity}" />
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="BorderElement"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{ThemeResource TextControlBorderThemeOpacity}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="BackgroundElement"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{ThemeResource TextControlPointerOverBackgroundThemeOpacity}" />
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="BorderElement"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="{ThemeResource TextControlPointerOverBorderThemeOpacity}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter"
                                              Grid.Row="0"
                                              Grid.ColumnSpan="2"
                                              Margin="0,4,0,4"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              FontWeight="Semilight"
                                              Foreground="{ThemeResource TextBoxForegroundHeaderThemeBrush}" />
                            <Border x:Name="BackgroundElement"
                                    Grid.Row="1"
                                    Grid.RowSpan="1"
                                    Grid.ColumnSpan="2"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Background="Transparent" />
                            <Border x:Name="BorderElement"
                                    Grid.Row="1"
                                    Grid.RowSpan="1"
                                    Grid.ColumnSpan="2"
                                    BorderBrush="LightGray"
                                    BorderThickness="0,0,0,2" />
                            <ScrollViewer x:Name="ContentElement"
                                          Grid.Row="1"
                                          Margin="{TemplateBinding BorderThickness}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                          IsTabStop="False"
                                          IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          ZoomMode="Disabled" />
                            <ContentControl x:Name="PlaceholderTextContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            Margin="{TemplateBinding BorderThickness}"
                                            Content="{TemplateBinding PlaceholderText}"
                                            Foreground="#FF7D7D7D"
                                            IsHitTestVisible="False"
                                            IsTabStop="False"
                                            Padding="{TemplateBinding Padding}" />
                            <Button x:Name="DeleteButton"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    FontSize="{TemplateBinding FontSize}"
                                    IsTabStop="False"
                                    Style="{StaticResource DeleteButtonStyle}"
                                    Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}"
                                               CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}"
                                               CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}"
                                               ContentMargin="0,4"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                               DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}"
                                               Padding="5,20"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                               PointerOverBackground="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}"
                                               PointerOverBackgroundMargin="1"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               SelectedBackground="#FF353535"
                                               SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}"
                                               SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                                               SelectedPointerOverBackground="{ThemeResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"
                                               SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}"
                                               SelectionCheckMarkVisualEnabled="True" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


    </Page.Resources>
    <Page.BottomAppBar>
        <CommandBar x:Name="commandBar"
                    IsOpen="True"
                    IsSticky="True">


            <AppBarButton Command="{Binding AddDeckCommand}"
                          Icon="Add"
                          Label="Hinzufügen" />
            <AppBarButton Command="{Binding RemoveDeckCommand}"
                          CommandParameter="{Binding SelectedDeck}"
                          Icon="Delete"
                          Label="Löschen" />

        </CommandBar>
    </Page.BottomAppBar>
    <Page.DataContext>
        <Viewmodel:DeckCollectionViewmodel />
    </Page.DataContext>
    <Grid x:Name="grid1"
          Margin="0,0,0,0"
          Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>

            <!--  Visuelle Zustände spiegeln den Ansichtszustand der Anwendung wider.  -->
            <VisualStateGroup x:Name="ViewStates">
                <VisualState x:Name="PrimaryView" />
                <VisualState x:Name="SinglePane">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="*" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="secondaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>

                    </Storyboard>
                </VisualState>
                <!--
                    Wenn ein Element ausgewählt wird und nur ein Bereich angezeigt wird, erfordert die Detailanzeige umfassendere Änderungen:
                    * Ausblenden der Hauptliste und der entsprechenden Spalte
                    * Verschieben der Elementdetails um eine Zeile nach unten, um Platz für den Titel zu schaffen
                    * Verschieben des Titels direkt über die Details
                    * Anpassen der Abstände für Details
                -->
                <VisualState x:Name="SinglePane_Detail">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeckList" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="standardHeadder" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBox" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>2</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(Grid.RowSpan)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Int32>1</x:Int32>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandBar" Storyboard.TargetProperty="(AppBar.IsOpen)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid1" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="commandBar" Storyboard.TargetProperty="(AppBar.IsSticky)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>

                    </Storyboard>
                </VisualState>
            </VisualStateGroup>


            <VisualStateGroup x:Name="CardDisableState">
                <VisualState x:Name="Disabled">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CardView" Storyboard.TargetProperty="(Control.IsEnabled)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ColorAnimation Duration="0"
                                        Storyboard.TargetName="CardView"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="#FF131313"
                                        d:IsOptimized="True" />
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBox" Storyboard.TargetProperty="(Control.IsEnabled)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Enabled" />

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Interactivity:Interaction.Behaviors>
            <Core:DataTriggerBehavior Binding="{Binding ElementName=DeckList, Path=SelectedIndex}" Value="-1">
                <Core:GoToStateAction StateName="Disabled" />
            </Core:DataTriggerBehavior>
            <Core:DataTriggerBehavior Binding="{Binding ElementName=DeckList,
                                                        Path=SelectedIndex}"
                                      ComparisonCondition="GreaterThan"
                                      Value="-1">
                <Core:GoToStateAction StateName="Enabled" />
            </Core:DataTriggerBehavior>
        </Interactivity:Interaction.Behaviors>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="primaryColumn" Width="420" />
            <ColumnDefinition x:Name="secondaryColumn" Width="*" />
        </Grid.ColumnDefinitions>


        <Controls:StandardHeadder x:Name="standardHeadder"
                                  Title="Deck"
                                  NavigationHelper="{Binding NavigationHelper,
                                                             ElementName=root}" />

        <TextBox x:Name="textBox"
                 Grid.Column="1"
                 Margin="0,0,30,39"
                 VerticalAlignment="Bottom"
                 Background="Transparent"
                 BorderBrush="#FFBDBDBD"
                 BorderThickness="0,0,0,2"
                 FontSize="56"
                 FontWeight="Light"
                 Foreground="White"
                 Padding="0,0,0,-16"
                 PlaceholderText="Bitte einen Namen für das Deck eingeben"
                 Text="{Binding SelectedDeck.Name,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}" />
        <ListView Name="DeckList"
                  Grid.Row="1"
                  Grid.RowSpan="2"
                  ItemsSource="{Binding Decks}"
                  SelectedItem="{Binding SelectedDeck,
                                         Mode=TwoWay}"
                  SelectionChanged="ListView_SelectionChanged"
                  SelectionMode="Single">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBox IsEnabled="False"
                             PlaceholderText="[Unbennantes Deck]"
                             Text="{Binding Name}">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}" />
                                <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="20" />
                                <Setter Property="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
                                <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
                                <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
                                <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                <Setter Property="SelectionHighlightColor" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TextBox">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Border x:Name="BackgroundElement"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="1"
                                                        Grid.ColumnSpan="2"
                                                        Margin="{TemplateBinding BorderThickness}"
                                                        Background="Transparent" />
                                                <ScrollViewer x:Name="ContentElement"
                                                              Grid.Row="1"
                                                              Margin="{TemplateBinding BorderThickness}"
                                                              AutomationProperties.AccessibilityView="Raw"
                                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                                              IsTabStop="False"
                                                              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                                              Padding="{TemplateBinding Padding}"
                                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                              ZoomMode="Disabled" />
                                                <ContentControl x:Name="PlaceholderTextContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                Margin="{TemplateBinding BorderThickness}"
                                                                Content="{TemplateBinding PlaceholderText}"
                                                                Foreground="#FF7D7D7D"
                                                                IsHitTestVisible="False"
                                                                IsTabStop="False"
                                                                Padding="{TemplateBinding Padding}" />

                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid x:Name="grid"
              Grid.Row="1"
              Grid.RowSpan="2"
              Grid.Column="1">



            <Grid.DataContext>
                <Viewmodel:CardCollectionViewmodel x:Name="ccViewmodel" User="{Binding LoggedInUser, Source={StaticResource UserDataViewmodel}}" />
            </Grid.DataContext>
            <GridView Name="CardView"
                      Grid.Row="1"
                      Grid.Column="1"
                      Background="#FF353535"
                      ItemsSource="{Binding Cards}"
                      Padding="30,10,0,0"
                      SelectionChanged="GridView_SelectionChanged"
                      SelectionMode="Multiple">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Controls:CardControl DataContext="{Binding}" />
                        <!--<TextBlock Text="{Binding}"/>-->
                        <!--<Rectangle Width="50" Height="50" Fill="#FFF50000" />-->
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
            <ProgressRing Width="60"
                          Height="60"
                          IsActive="{Binding Loading}" />

        </Grid>

    </Grid>
</Page>
